<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com"/>
    <!-- <context:component-scan/> -->
    <!-- 注解：扫描base-package包或者子包下所有的Java类，并把匹配的Java类注册成Bean。 -->
    <!-- 这里我们设置成扫描com包下所有的Java类 -->

    <!--    1、配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <!--    2、数据源druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="jdbc:mysql://localhost:3306/cstable?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=true"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="Pyl1031~~"/>
    </bean>
    <!--    3、配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--        注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--        扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--        引入插件-->
        <property name="plugins">
            <array>
<!--                mybatis分页插件-->
                <bean class="com.github.pagehelper.PageInterceptor">
                      <property name="properties">
<!--                          helperDialect:连接数据库的类型-->
                          <value>
                              helperDialect=mysql
                          </value>
                      </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    <!--    扫描basePackage下所有以@MyBatisDao注解的接口-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.cs.dao"/>
    </bean>
</beans>